##############################
### Author:SHIVOM BHARGAVA ###
##############################



version: "3.7"


services:

##############################
#######   MYSQL_DB  ##########
##############################
  mysql_db:
    image: mysql:latest
    volumes:
      - mysql_login:/var/lib/mysql
      # - ./db:/var/lib/mysql
    environment:                                                #These are the environment variables 
                                                                #to initialize database creation
      MYSQL_ROOT_USERNAME: 'root'                               # ROOT (Admin) USER
      MYSQL_ROOT_PASSWORD: 'development_instance_root_password' # ROOT (Admin) Password
      MYSQL_DATABASE: 'warehouse_database'                      # DB to be created
      MYSQL_USER: 'warehouse_user'                              # USER with limited privileges
      MYSQL_PASSWORD: 'development_instance_password'           # password for USER with limited privileges
    ports:
      - '50903:3306'                                            # to  access DB on host(local) use 50903 and 
                    # use 3306 to access the SQL database from another container within the  docker environment 
    
    networks:                                                   # declaration of the network type
      - backend
    # restart: unless-stopped

##############################
###    PHP MY ADMIN       ####
##############################

#  SQL GUI app that connects to the SQL DB service for seeing database

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    # restart: unless-stopped
    environment:
      PMA_HOST: mysql_db
    depends_on:
      - mysql_db
    ports:
      - "9090:80"
    networks:
      - backend

##############################
###    FLASK LOGIN APP    ####
##############################

#  Login APP based on Flask

  flask_app:
    build: 
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/expense_login_App
    container_name: flask_app_container
    # restart: unless-stopped
    ports:
      - "443:5000"
    networks:
      - backend
      - front-end


### Dont forget to mention here the volume that you have attached above
volumes:
  mysql_login:

networks:
  front-end:
  backend: